//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _NorthwintClient.NorthwindServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NorthwindServiceReference.NorthwindDataServiceSoap")]
    public interface NorthwindDataServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/List", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        _NorthwintClient.NorthwindServiceReference.Category[] List(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/List", ReplyAction="*")]
        System.Threading.Tasks.Task<_NorthwintClient.NorthwindServiceReference.Category[]> ListAsync(string key);
        
        // CODEGEN: Generating message contract since message InsertRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Insert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        _NorthwintClient.NorthwindServiceReference.InsertResponse Insert(_NorthwintClient.NorthwindServiceReference.InsertRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Insert", ReplyAction="*")]
        System.Threading.Tasks.Task<_NorthwintClient.NorthwindServiceReference.InsertResponse> InsertAsync(_NorthwintClient.NorthwindServiceReference.InsertRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Delete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Delete", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DeleteAsync(int id);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Category : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int categoryIDField;
        
        private string categoryNameField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int CategoryID {
            get {
                return this.categoryIDField;
            }
            set {
                this.categoryIDField = value;
                this.RaisePropertyChanged("CategoryID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CategoryName {
            get {
                return this.categoryNameField;
            }
            set {
                this.categoryNameField = value;
                this.RaisePropertyChanged("CategoryName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AuthHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string usernameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Insert", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public _NorthwintClient.NorthwindServiceReference.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public _NorthwintClient.NorthwindServiceReference.Category category;
        
        public InsertRequest() {
        }
        
        public InsertRequest(_NorthwintClient.NorthwindServiceReference.AuthHeader AuthHeader, _NorthwintClient.NorthwindServiceReference.Category category) {
            this.AuthHeader = AuthHeader;
            this.category = category;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InsertResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string InsertResult;
        
        public InsertResponse() {
        }
        
        public InsertResponse(string InsertResult) {
            this.InsertResult = InsertResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface NorthwindDataServiceSoapChannel : _NorthwintClient.NorthwindServiceReference.NorthwindDataServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NorthwindDataServiceSoapClient : System.ServiceModel.ClientBase<_NorthwintClient.NorthwindServiceReference.NorthwindDataServiceSoap>, _NorthwintClient.NorthwindServiceReference.NorthwindDataServiceSoap {
        
        public NorthwindDataServiceSoapClient() {
        }
        
        public NorthwindDataServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NorthwindDataServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NorthwindDataServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NorthwindDataServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public _NorthwintClient.NorthwindServiceReference.Category[] List(string key) {
            return base.Channel.List(key);
        }
        
        public System.Threading.Tasks.Task<_NorthwintClient.NorthwindServiceReference.Category[]> ListAsync(string key) {
            return base.Channel.ListAsync(key);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        _NorthwintClient.NorthwindServiceReference.InsertResponse _NorthwintClient.NorthwindServiceReference.NorthwindDataServiceSoap.Insert(_NorthwintClient.NorthwindServiceReference.InsertRequest request) {
            return base.Channel.Insert(request);
        }
        
        public string Insert(_NorthwintClient.NorthwindServiceReference.AuthHeader AuthHeader, _NorthwintClient.NorthwindServiceReference.Category category) {
            _NorthwintClient.NorthwindServiceReference.InsertRequest inValue = new _NorthwintClient.NorthwindServiceReference.InsertRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.category = category;
            _NorthwintClient.NorthwindServiceReference.InsertResponse retVal = ((_NorthwintClient.NorthwindServiceReference.NorthwindDataServiceSoap)(this)).Insert(inValue);
            return retVal.InsertResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<_NorthwintClient.NorthwindServiceReference.InsertResponse> _NorthwintClient.NorthwindServiceReference.NorthwindDataServiceSoap.InsertAsync(_NorthwintClient.NorthwindServiceReference.InsertRequest request) {
            return base.Channel.InsertAsync(request);
        }
        
        public System.Threading.Tasks.Task<_NorthwintClient.NorthwindServiceReference.InsertResponse> InsertAsync(_NorthwintClient.NorthwindServiceReference.AuthHeader AuthHeader, _NorthwintClient.NorthwindServiceReference.Category category) {
            _NorthwintClient.NorthwindServiceReference.InsertRequest inValue = new _NorthwintClient.NorthwindServiceReference.InsertRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.category = category;
            return ((_NorthwintClient.NorthwindServiceReference.NorthwindDataServiceSoap)(this)).InsertAsync(inValue);
        }
        
        public string Delete(int id) {
            return base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
    }
}
